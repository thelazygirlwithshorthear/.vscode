"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionInformation = exports.Connection = exports.Language = exports.getJanusPassword = void 0;
const sds = require("@otris/node-sds");
const JANUS_CRYPTMD5_SALT = 'o3';
function getJanusPassword(val) {
    if (val.length > 0) {
        return sds.crypt_md5(val, JANUS_CRYPTMD5_SALT);
    }
    return '';
}
exports.getJanusPassword = getJanusPassword;
/**
 * For now only English and German.
 * But actually it's possible to set another language.
 */
var Language;
(function (Language) {
    Language[Language["German"] = 0] = "German";
    Language[Language["English"] = 1] = "English";
})(Language = exports.Language || (exports.Language = {}));
class Connection {
    constructor() {
        this.server = "";
        this.port = 0;
        this.username = "";
        this.principal = "";
    }
}
exports.Connection = Connection;
class ConnectionInformation extends Connection {
    constructor() {
        super(...arguments);
        this.askForPassword = false;
        this.documentsVersion = '';
        /**
         * Language has always been German, because if no language is set,
         * the server sets the language to 0, and that is German.
         * The existing behaviour shouldn't be changed, so the default
         * language will still be German.
         */
        this.language = Language.German;
        this.lastWarning = '';
        this.lastError = '';
    }
    resetLoginData() {
        this.server = '';
        this.port = 0;
        this.principal = '';
        this.username = '';
    }
    checkLoginData() {
        if ('' === this.server || 0 === this.port || '' === this.principal || '' === this.username) {
            return false;
        }
        return true;
    }
    checkAnyLoginData() {
        if ('' === this.server && 0 === this.port && '' === this.principal && '' === this.username) {
            return false;
        }
        return true;
    }
    dispose() {
        //
    }
}
exports.ConnectionInformation = ConnectionInformation;
//# sourceMappingURL=config.js.map