export type Hash = any;
export type JanusPassword = '' | Hash;
export declare function getJanusPassword(val: string): JanusPassword;
/**
 * For now only English and German.
 * But actually it's possible to set another language.
 */
export declare enum Language {
    German = 0,
    English = 1
}
export declare class Connection {
    server: string;
    port: number;
    username: string;
    password: Hash | "" | undefined;
    principal: string;
    sdsTimeout?: number;
    clientName?: string;
    tls?: boolean;
    startTls?: boolean;
    trustedCas?: string | string[];
}
export declare class ConnectionInformation extends Connection {
    askForPassword: boolean;
    userId?: number;
    configFile?: string;
    documentsVersion: string;
    /**
     * Language has always been German, because if no language is set,
     * the server sets the language to 0, and that is German.
     * The existing behaviour shouldn't be changed, so the default
     * language will still be German.
     */
    language: Language;
    lastWarning: string;
    lastError: string;
    resetLoginData(): void;
    checkLoginData(): boolean;
    checkAnyLoginData(): boolean;
    dispose(): void;
}
