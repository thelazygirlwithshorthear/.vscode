/// <reference types="node" />
import { Operations, ParameterNames, SDSMessage } from "./SDSMessage";
/**
 * Class for creating request message which can be send to the JANUS-application
 */
export declare class SDSRequest extends SDSMessage {
    constructor();
    /**
     * Returns the object id the response belongs to
     * @returns The object id the response belongs to
     */
    get oId(): string;
    /**
     * Sets the object id to operate on
     * @param oId ID of the PD-Object
     * @returns The object id to operate on
     */
    set oId(oId: string);
    /**
     * Returns the operation which should be executed
     * @returns Operation which should be executed
     */
    get operation(): Operations;
    /**
     * Sets the operation to execute on the server side
     * @param operation Identifier of the operation
     */
    set operation(operation: Operations);
    /**
     * Appends the passed bytes to the message buffer
     * @param bytes Bytes which should be appended to the buffer
     */
    add(bytes: Buffer | number[]): void;
    /**
     * Adds a parameter to the request
     * @param parameterName Name of the parameter of the operation to add
     * @param value Value of the parameter
     */
    addParameter(parameterName: ParameterNames, value: string | string[] | number | boolean | null): void;
    /**
     * Prepares the message to be send to the JANUS-server
     */
    pack(): Buffer;
    /**
     * Adds a parameter of type "boolean" to the request
     * @param parameterName Name of the parameter
     * @param value Value of the parameter
     */
    private addBoolean;
    /**
     * Adds a parameter of type "int" to the request
     * @param parameterName Name of the parameter
     * @param value Value of the parameter
     */
    private addInt32;
    private addNullFlag;
    /**
     * Adds the given ID as 64-bit integer to the message
     * @param parameterName
     * @param oIdHigh
     * @param oIdLow
     */
    private addOIDParameter;
    /**
     * Adds a parameter of type "string" to the request
     * @param parameterName Name of the parameter
     * @param value Value of the parameter
     */
    private addString;
    /**
     * Adds a string array parameter to the request
     * @param parameterName Name of the parameter
     * @param value Value of the parameter
     */
    private addStringList;
}
