"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDSMessage = exports.Types = exports.ServerGuiOperations = exports.ParameterNames = exports.Operations = exports.PDMeta_COMOperations = exports.ComOperations = void 0;
const network_1 = require("../network");
var ComOperations;
(function (ComOperations) {
    ComOperations[ComOperations["GET_CLASSES"] = 5] = "GET_CLASSES";
    ComOperations[ComOperations["GET_CLASS_NAME"] = 10] = "GET_CLASS_NAME";
    ComOperations[ComOperations["GET_CLASS_ID"] = 11] = "GET_CLASS_ID";
    ComOperations[ComOperations["ERROR_MESSAGE"] = 17] = "ERROR_MESSAGE";
    ComOperations[ComOperations["RUN_SCRIPT_ON_SERVER"] = 42] = "RUN_SCRIPT_ON_SERVER";
    ComOperations[ComOperations["PDMETA_COMDLLCALL"] = 199] = "PDMETA_COMDLLCALL";
})(ComOperations = exports.ComOperations || (exports.ComOperations = {}));
var PDMeta_COMOperations;
(function (PDMeta_COMOperations) {
    PDMeta_COMOperations[PDMeta_COMOperations["GET_ERGNAME"] = 1] = "GET_ERGNAME";
    PDMeta_COMOperations[PDMeta_COMOperations["GET_DESCRIPTION"] = 3] = "GET_DESCRIPTION";
    PDMeta_COMOperations[PDMeta_COMOperations["GET_ATTRIBUTES"] = 4] = "GET_ATTRIBUTES";
    PDMeta_COMOperations[PDMeta_COMOperations["GET_ASSOCS"] = 14] = "GET_ASSOCS";
    PDMeta_COMOperations[PDMeta_COMOperations["GET_ASSOC_CLASS"] = 15] = "GET_ASSOC_CLASS";
})(PDMeta_COMOperations = exports.PDMeta_COMOperations || (exports.PDMeta_COMOperations = {}));
/* tslint:enable:member-ordering */
var Operations;
(function (Operations) {
    Operations[Operations["PDCLASS_SEEK"] = 9] = "PDCLASS_SEEK";
    Operations[Operations["PDCLASS_DELETE_ITERATOR"] = 10] = "PDCLASS_DELETE_ITERATOR";
    Operations[Operations["PDCLASS_DELETE_OBJECT"] = 12] = "PDCLASS_DELETE_OBJECT";
    Operations[Operations["CHANGE_PRINCIPAL"] = 203] = "CHANGE_PRINCIPAL";
    Operations[Operations["NEW_LOCK_GROUP"] = 25] = "NEW_LOCK_GROUP";
    Operations[Operations["CHANGE_USER"] = 27] = "CHANGE_USER";
    Operations[Operations["PDOBJECT_START_TRANSACTION"] = 30] = "PDOBJECT_START_TRANSACTION";
    Operations[Operations["PDOBJECT_COMMIT_TRANSACTION"] = 31] = "PDOBJECT_COMMIT_TRANSACTION";
    Operations[Operations["PDOBJECT_SETATTRIBUTE"] = 32] = "PDOBJECT_SETATTRIBUTE";
    Operations[Operations["PDOBJECT_GETATTRIBUTE"] = 33] = "PDOBJECT_GETATTRIBUTE";
    Operations[Operations["PDOBJECT_COUNT_OBJECT"] = 39] = "PDOBJECT_COUNT_OBJECT";
    Operations[Operations["PDOBJECT_NEWITERATOR"] = 40] = "PDOBJECT_NEWITERATOR";
    Operations[Operations["PDOBJECT_SEEK"] = 42] = "PDOBJECT_SEEK";
    Operations[Operations["PDOBJECT_CONNECT"] = 43] = "PDOBJECT_CONNECT";
    Operations[Operations["PDOBJECT_DELETE_ITERATOR"] = 45] = "PDOBJECT_DELETE_ITERATOR";
    Operations[Operations["PDOBJECT_SYNC"] = 62] = "PDOBJECT_SYNC";
    Operations[Operations["PDCLASS_DISCONNECT_CLIENT"] = 49] = "PDCLASS_DISCONNECT_CLIENT";
    Operations[Operations["PDCLASS_PTR"] = 53] = "PDCLASS_PTR";
    Operations[Operations["PDOBJECT_CALL_SYNC"] = 55] = "PDOBJECT_CALL_SYNC";
    Operations[Operations["PDOBJECT_CALL_ASYNC"] = 56] = "PDOBJECT_CALL_ASYNC";
    Operations[Operations["PDCLASS_CALL_SYNC"] = 57] = "PDCLASS_CALL_SYNC";
    Operations[Operations["PDCLASS_CALL_ASYNC"] = 58] = "PDCLASS_CALL_ASYNC";
    Operations[Operations["PDMETA_SETLANGUAGE"] = 59] = "PDMETA_SETLANGUAGE";
    Operations[Operations["PDCLASS_NEWOBJECT"] = 63] = "PDCLASS_NEWOBJECT";
    Operations[Operations["PDCLASS_COUNT_OBJECTS"] = 68] = "PDCLASS_COUNT_OBJECTS";
    Operations[Operations["PDCLASS_NEW_ITERATOR"] = 65] = "PDCLASS_NEW_ITERATOR";
    Operations[Operations["PDCLASS_NEWUSER"] = 80] = "PDCLASS_NEWUSER";
    Operations[Operations["PDOBJECT_CALL_SYNC_PARAMETERIZED"] = 99] = "PDOBJECT_CALL_SYNC_PARAMETERIZED";
    Operations[Operations["PDOBJECT_CALL_ASYNC_PARAMETERIZED"] = 100] = "PDOBJECT_CALL_ASYNC_PARAMETERIZED";
    Operations[Operations["PDCLASS_CALL_SYNC_PARAMETERIZED"] = 101] = "PDCLASS_CALL_SYNC_PARAMETERIZED";
    Operations[Operations["PDCLASS_CALL_ASYNC_PARAMETERIZED"] = 102] = "PDCLASS_CALL_ASYNC_PARAMETERIZED";
    Operations[Operations["PDCLASS_SEEK_NEXT"] = 110] = "PDCLASS_SEEK_NEXT";
    Operations[Operations["PDCLASS_SEEK_FIRST"] = 111] = "PDCLASS_SEEK_FIRST";
    Operations[Operations["PDCLASS_HAS_NEXT"] = 112] = "PDCLASS_HAS_NEXT";
    Operations[Operations["PDCLASS_HAS_PREVIOUS"] = 113] = "PDCLASS_HAS_PREVIOUS";
    Operations[Operations["PDOBJECT_SEEK_NEXT"] = 114] = "PDOBJECT_SEEK_NEXT";
    Operations[Operations["PDOBJECT_SEEK_FIRST"] = 115] = "PDOBJECT_SEEK_FIRST";
    Operations[Operations["PDOBJECT_HAS_NEXT"] = 116] = "PDOBJECT_HAS_NEXT";
    Operations[Operations["PDOBJECT_HAS_PREV"] = 117] = "PDOBJECT_HAS_PREV";
    Operations[Operations["PDCLASS_SEEK_OBJECT"] = 134] = "PDCLASS_SEEK_OBJECT";
    Operations[Operations["PDOBJECT_SEEK_OBJECT"] = 139] = "PDOBJECT_SEEK_OBJECT";
    Operations[Operations["PDMETA_GETSTRING"] = 141] = "PDMETA_GETSTRING";
    Operations[Operations["PDCLASS_CREATE_LOCK_AND_GROUP"] = 168] = "PDCLASS_CREATE_LOCK_AND_GROUP";
    /** Used to request the string representation of an error code (PDMeta.getString) or to get the available class names of the JANUS-application (PDMeta.getClasses) */
    Operations[Operations["COM_OPERATION"] = 199] = "COM_OPERATION";
    Operations[Operations["CREATE_OR_CHANGE_PRINCIPAL"] = 202] = "CREATE_OR_CHANGE_PRINCIPAL";
    Operations[Operations["PDCLASS_GET_PRINCIPAL_ID"] = 204] = "PDCLASS_GET_PRINCIPAL_ID";
    /** Operations of the server GUI */
    Operations[Operations["SERVER_GUI_OPERATION"] = 209] = "SERVER_GUI_OPERATION";
    /** PDTools */
    Operations[Operations["PDTOOLS_TRANSFERFILE"] = 210] = "PDTOOLS_TRANSFERFILE";
})(Operations = exports.Operations || (exports.Operations = {}));
/**
 * Names of parameters and return values of server side operations
 */
var ParameterNames;
(function (ParameterNames) {
    ParameterNames[ParameterNames["CLIENT_ID"] = 1] = "CLIENT_ID";
    ParameterNames[ParameterNames["CLASS_NAME"] = 2] = "CLASS_NAME";
    ParameterNames[ParameterNames["OTHER_OBJECT_ID"] = 3] = "OTHER_OBJECT_ID";
    ParameterNames[ParameterNames["VALUE"] = 4] = "VALUE";
    ParameterNames[ParameterNames["RETURN_VALUE"] = 5] = "RETURN_VALUE";
    ParameterNames[ParameterNames["SOMETHING"] = 8] = "SOMETHING";
    ParameterNames[ParameterNames["RELATION_NAME"] = 9] = "RELATION_NAME";
    ParameterNames[ParameterNames["ITERATOR_ID"] = 10] = "ITERATOR_ID";
    ParameterNames[ParameterNames["ITERATOR_OFFSET"] = 11] = "ITERATOR_OFFSET";
    ParameterNames[ParameterNames["INDEX"] = 13] = "INDEX";
    ParameterNames[ParameterNames["LANGUAGE"] = 14] = "LANGUAGE";
    ParameterNames[ParameterNames["CLASS_ID"] = 16] = "CLASS_ID";
    ParameterNames[ParameterNames["LIST_NAME"] = 17] = "LIST_NAME";
    ParameterNames[ParameterNames["IS_TRANSACTION_OBJECT"] = 18] = "IS_TRANSACTION_OBJECT";
    ParameterNames[ParameterNames["LOCK_MODE"] = 19] = "LOCK_MODE";
    ParameterNames[ParameterNames["LOCK_GROUP"] = 20] = "LOCK_GROUP";
    ParameterNames[ParameterNames["USER"] = 21] = "USER";
    ParameterNames[ParameterNames["PASSWORD"] = 22] = "PASSWORD";
    ParameterNames[ParameterNames["LAST"] = 25] = "LAST";
    ParameterNames[ParameterNames["ATTRS"] = 26] = "ATTRS";
    ParameterNames[ParameterNames["PROPERTIES"] = 29] = "PROPERTIES";
    ParameterNames[ParameterNames["SORT_EXPRESSION"] = 30] = "SORT_EXPRESSION";
    ParameterNames[ParameterNames["NEWNAME"] = 32] = "NEWNAME";
    ParameterNames[ParameterNames["USER_ID"] = 40] = "USER_ID";
    ParameterNames[ParameterNames["SELECT"] = 43] = "SELECT";
    ParameterNames[ParameterNames["FULL_NAME"] = 45] = "FULL_NAME";
    ParameterNames[ParameterNames["PASSWORD_EXPIRE"] = 46] = "PASSWORD_EXPIRE";
    ParameterNames[ParameterNames["ACCOUNT_EXPIRE"] = 47] = "ACCOUNT_EXPIRE";
    ParameterNames[ParameterNames["PARAMETER"] = 48] = "PARAMETER";
    ParameterNames[ParameterNames["PARAMETER_PDO"] = 49] = "PARAMETER_PDO";
    ParameterNames[ParameterNames["CONVERSION"] = 51] = "CONVERSION";
    ParameterNames[ParameterNames["INIT"] = 53] = "INIT";
    ParameterNames[ParameterNames["READ"] = 54] = "READ";
    ParameterNames[ParameterNames["WRITE"] = 55] = "WRITE";
    ParameterNames[ParameterNames["FROM"] = 58] = "FROM";
    ParameterNames[ParameterNames["TO"] = 59] = "TO";
    ParameterNames[ParameterNames["PRINCIPAL"] = 80] = "PRINCIPAL";
    ParameterNames[ParameterNames["PRINCIPAL_ID"] = 81] = "PRINCIPAL_ID";
    ParameterNames[ParameterNames["USERS"] = 82] = "USERS";
    ParameterNames[ParameterNames["START"] = 83] = "START";
    ParameterNames[ParameterNames["SIZE"] = 85] = "SIZE";
    ParameterNames[ParameterNames["MESSAGE"] = 86] = "MESSAGE";
    ParameterNames[ParameterNames["FILENAME"] = 87] = "FILENAME";
    ParameterNames[ParameterNames["OPERATION_CODE"] = 88] = "OPERATION_CODE";
    ParameterNames[ParameterNames["FLAG"] = 119] = "FLAG";
})(ParameterNames = exports.ParameterNames || (exports.ParameterNames = {}));
var ServerGuiOperations;
(function (ServerGuiOperations) {
    ServerGuiOperations[ServerGuiOperations["SILENT_ON"] = 1] = "SILENT_ON";
    ServerGuiOperations[ServerGuiOperations["SILENT_OFF"] = 2] = "SILENT_OFF";
    ServerGuiOperations[ServerGuiOperations["DEBUG_LEVEL"] = 3] = "DEBUG_LEVEL";
    ServerGuiOperations[ServerGuiOperations["DEBUG_STREAM_ON"] = 4] = "DEBUG_STREAM_ON";
    ServerGuiOperations[ServerGuiOperations["DEBUG_STREAM_OFF"] = 5] = "DEBUG_STREAM_OFF";
    ServerGuiOperations[ServerGuiOperations["DEBUG_STREAM_GET"] = 6] = "DEBUG_STREAM_GET";
    ServerGuiOperations[ServerGuiOperations["CLIENT_DISCONNEC"] = 7] = "CLIENT_DISCONNEC";
    ServerGuiOperations[ServerGuiOperations["CLIENT_MESSAGE"] = 8] = "CLIENT_MESSAGE";
    ServerGuiOperations[ServerGuiOperations["CLIENT_GETLIST"] = 9] = "CLIENT_GETLIST";
    ServerGuiOperations[ServerGuiOperations["CLIENT_GETMESSAGES"] = 10] = "CLIENT_GETMESSAGES";
    ServerGuiOperations[ServerGuiOperations["PROFILE_ON"] = 11] = "PROFILE_ON";
    ServerGuiOperations[ServerGuiOperations["PROFILE_OFF"] = 12] = "PROFILE_OFF";
    ServerGuiOperations[ServerGuiOperations["REMOTE_SHUTDOWN"] = 13] = "REMOTE_SHUTDOWN";
    ServerGuiOperations[ServerGuiOperations["EXPORT"] = 14] = "EXPORT";
    ServerGuiOperations[ServerGuiOperations["IMPORT"] = 15] = "IMPORT";
    ServerGuiOperations[ServerGuiOperations["IS_DEBUG"] = 16] = "IS_DEBUG";
    ServerGuiOperations[ServerGuiOperations["TEMP_NAME"] = 17] = "TEMP_NAME";
    ServerGuiOperations[ServerGuiOperations["START_JSDEBUG"] = 18] = "START_JSDEBUG";
    ServerGuiOperations[ServerGuiOperations["JSRUN"] = 19] = "JSRUN";
    ServerGuiOperations[ServerGuiOperations["JSSTEPINTO"] = 20] = "JSSTEPINTO";
    ServerGuiOperations[ServerGuiOperations["JSSTEPOVER"] = 21] = "JSSTEPOVER";
    ServerGuiOperations[ServerGuiOperations["JSSETBREAKPOINT"] = 22] = "JSSETBREAKPOINT";
    ServerGuiOperations[ServerGuiOperations["JSREMOVEBREAKEPOINT"] = 23] = "JSREMOVEBREAKEPOINT";
    ServerGuiOperations[ServerGuiOperations["JSGETBREAKPOINTS"] = 24] = "JSGETBREAKPOINTS";
    ServerGuiOperations[ServerGuiOperations["JSATBREAKPOINT"] = 25] = "JSATBREAKPOINT";
    ServerGuiOperations[ServerGuiOperations["JSGETCLIENTID"] = 26] = "JSGETCLIENTID";
    ServerGuiOperations[ServerGuiOperations["JSGETSOURCE"] = 27] = "JSGETSOURCE";
    ServerGuiOperations[ServerGuiOperations["JSGETLINE"] = 28] = "JSGETLINE";
    ServerGuiOperations[ServerGuiOperations["SERVICE"] = 29] = "SERVICE";
    ServerGuiOperations[ServerGuiOperations["INEXPORTIMPORT"] = 30] = "INEXPORTIMPORT";
    ServerGuiOperations[ServerGuiOperations["IMPORTPREPARE_START"] = 31] = "IMPORTPREPARE_START";
    ServerGuiOperations[ServerGuiOperations["IMPORTPREPARE_END"] = 32] = "IMPORTPREPARE_END";
    ServerGuiOperations[ServerGuiOperations["END_JSDEBUG"] = 33] = "END_JSDEBUG";
    ServerGuiOperations[ServerGuiOperations["LIC_JSDEBUG"] = 34] = "LIC_JSDEBUG";
    ServerGuiOperations[ServerGuiOperations["EVAL_JSDEBUG"] = 35] = "EVAL_JSDEBUG";
    ServerGuiOperations[ServerGuiOperations["EVAL_MULTI_JSDEBUG"] = 36] = "EVAL_MULTI_JSDEBUG";
    ServerGuiOperations[ServerGuiOperations["JSSETBREAKPOINTS"] = 37] = "JSSETBREAKPOINTS";
    ServerGuiOperations[ServerGuiOperations["DELETEFILE"] = 38] = "DELETEFILE";
    ServerGuiOperations[ServerGuiOperations["DEFAULTEXPORTIMPORTSECTIONS"] = 39] = "DEFAULTEXPORTIMPORTSECTIONS";
    ServerGuiOperations[ServerGuiOperations["RUN_SCRIPT"] = 40] = "RUN_SCRIPT";
})(ServerGuiOperations = exports.ServerGuiOperations || (exports.ServerGuiOperations = {}));
var Types;
(function (Types) {
    Types[Types["BOOLEAN"] = 2] = "BOOLEAN";
    Types[Types["INT32"] = 3] = "INT32";
    Types[Types["DATE"] = 4] = "DATE";
    Types[Types["STRING"] = 7] = "STRING";
    Types[Types["OID"] = 9] = "OID";
    Types[Types["INT32_LIST"] = 10] = "INT32_LIST";
    Types[Types["STRING_LIST"] = 11] = "STRING_LIST";
    Types[Types["OID_LIST"] = 12] = "OID_LIST";
    Types[Types["NULL_FLAG"] = 128] = "NULL_FLAG";
})(Types = exports.Types || (exports.Types = {}));
/**
 * Base class of the SDSRequest and SDSResponse
 */
class SDSMessage {
    constructor(buffer) {
        this._oId = "";
        this._operation = -1;
        if (buffer) {
            this.buffer = buffer;
            this.bufferedLength = (0, network_1.ntohl)(buffer, 0);
        }
        else {
            this.buffer = Buffer.alloc(SDSMessage.INITIAL_BUFFER_SIZE);
            this.bufferedLength = 0;
        }
    }
    /**
     * Returns the number of bytes of an utf-8 string plus a 0-terminus.
     * @param {string} str An arbitrary string
     * @returns Number of all code units plus a final '0'.
     */
    static length_term_utf8(str) {
        const byteLength = Buffer.byteLength(str);
        return byteLength + 1;
    }
    /**
     * Returns a buffer (the bytes) of an utf-8 string plus a 0-terminus.
     * @param {string} str An arbitrary string
     * @returns A buffer containing all code units plus a final '0'.
     */
    static term_utf8(str) {
        const byteLength = Buffer.byteLength(str);
        const buffer = Buffer.alloc(byteLength + 1, str, "utf-8");
        buffer[byteLength] = 0;
        return buffer;
    }
    toString() {
        return `${JSON.stringify(this.buffer)}\r\n\r\nBuffered length: ${this.bufferedLength}\r\nOId: ${this.oId}\r\nOperation: ${this.operation}`;
    }
}
exports.SDSMessage = SDSMessage;
/** Acknowledgment message */
SDSMessage.ACK = Buffer.from(SDSMessage.term_utf8("valid"));
SDSMessage.ACK_SSL_LEVEL_B = Buffer.from(SDSMessage.term_utf8("valid SSL Level b"));
SDSMessage.ACK_SSL_LEVEL_C = Buffer.from(SDSMessage.term_utf8("valid SSL Level c"));
SDSMessage.ACK_SSL_LEVEL_D = Buffer.from(SDSMessage.term_utf8("valid SSL Level d"));
/** Hello-Message ("magic") to login to the JANUS-server */
SDSMessage.HELLO = Buffer.from("GGCH$1$$", "ascii");
/** Invalid message (if the request was invalid) */
SDSMessage.INVALID = Buffer.from("invalid", "ascii");
/** Initial size of the created buffer */
SDSMessage.INITIAL_BUFFER_SIZE = 4096;
//# sourceMappingURL=SDSMessage.js.map