"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JANUSClass = void 0;
class JANUSClass {
    constructor(sdsConnection) {
        this.connection = sdsConnection;
    }
    set sdsConnection(connection) {
        this.connection = connection;
    }
    /**
     * Returns a formatted user friendly error message
     * @param errorInfo Additional informations about the occurred error
     * @param errorCode Error code
     * @param operation The operation to convert the error code to a user friendly string message
     * @returns User friendly error message
     */
    getFormattedError(errorInfo, errorCode, operation = this.connection.PDMeta.getString) {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            try {
                if (typeof errorCode === "number") {
                    const errorMessage = yield operation.call(this, errorCode);
                    resolve(`${errorInfo}.\r\nMessage: ${errorMessage}\r\nError code: ${errorCode}`);
                }
                else {
                    resolve(`${errorInfo}.`);
                }
            }
            catch (err) {
                reject(err);
            }
        }));
    }
}
exports.JANUSClass = JANUSClass;
//# sourceMappingURL=JANUSClass.js.map